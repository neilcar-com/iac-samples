- name: Generate user array
  set_fact:
    user:
      username: "{{ item.username }}"
      password: "{{ lookup('password', 'files/' + groups['console'][0] + '/creds/' + item.username) }}"
  with_items: "{{ users }}"
  register: user_array

- name: Add users
  shell: "kubectl exec $(kubectl get pod -l app=splunk -o jsonpath='{.items[0].metadata.name}' -n infra) -n infra -- entrypoint.sh splunk add user {{ item.ansible_facts.user.username }} -password \"{{ item.ansible_facts.user.password  }}\" -role admin -auth admin:{{ new_password }}"  
  with_items: "{{ user_array.results }}"
  register: result
  retries: 10
  delay: 20
  ignore_errors: true
  until: result is succeeded or ("Cannot create user that already exists" in result.stderr) or ("Cannot create user that already exists"in result.stdout) or ("exit code 141" in result.stderr)
# retry here as splunk should just be coming up

- name: Add syslog input
  shell: "kubectl exec $(kubectl get pod -l app=splunk -o jsonpath='{.items[0].metadata.name}' -n infra) -n infra -- entrypoint.sh splunk add tcp 3514 -sourcetype syslog -auth admin:{{ new_password }}"  
  register: result
  retries: 10
  delay: 20
  ignore_errors: true
  until: result is succeeded or ("Configuration for port 3514 already exists" in result.stderr) or ("Configuration for port 3514 already exists"in result.stdout)


