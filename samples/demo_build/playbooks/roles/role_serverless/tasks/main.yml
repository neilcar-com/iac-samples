# AWS Lambda Task
# This task will:
#   1) Create a new security policy for the demoFunction Lambda function
#   2) Run twistcli to augment the existing function with the security policy
#   3) Upload the function to AWS
#   4) Run the function
#   5) Delete the function

#- set_fact:
#    aws_region: "us-east-1"
#  when: aws_region is undefined

#- name: Set uuid
#  set_fact:
#      serverless_uuid: "automation_test_{{ 64000 | random }}"

- name: Copy the demo function to the console
  copy:
    src: files/demo_function.zip
    dest: /tmp/demo_function.zip

- name: Copy the swagger api definition
  copy:
    src: files/swagger_api.yml
    dest: /tmp/swagger_api.yml



- name: Update the demo function with the defender and security policy (18.11)
  command: "{{ ansible_user_dir }}/twistlock/linux/twistcli serverless embed --console-host console-{{ groups['console'][0] }}:8084 --address {{ twistlock_console }} --function demo_function --handler lambda_function.handler --runtime python3.6 --user {{ console_user }} --password {{ console_password }} --output /tmp/demo_function_secured.zip /tmp/demo_function.zip"
  when: twistlock_version.split('.')[0] == "18"

- name: Update the demo function with the defender and security policy (19.03+)
  command: "{{ ansible_user_dir }}/twistlock/linux/twistcli serverless embed --console-host console-{{ groups['console'][0] }}:8084 --address {{ twistlock_console }} --function demo_function --handler lambda_function.handler --runtime python3.6 --user {{ console_user }} --password {{ console_password }} --output-file /tmp/demo_function_secured.zip /tmp/demo_function.zip"
  when: twistlock_version.split('.')[0] != "18"

- name: Install boto3 Python package
  command: pip install boto3

- name: Uploading secured Lambda function to AWS
  lambda:
    aws_access_key: "{{ aws_access_key_id }}" 
    aws_secret_key: "{{ aws_secret_access_key }}"
    name: "{{ serverless_uuid }}"
    region: "{{ aws_region }}"
    zip_file: /tmp/demo_function_secured.zip
    runtime: 'python3.6'
    role: 'arn:aws:iam::113505086193:role/lambda_basic_execution'
    handler: 'lambda_function.handler'
    state: present

- name: Executing Lambda function
  execute_lambda:
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    function_arn: "arn:aws:lambda:us-east-1:113505086193:function:{{ serverless_uuid }}"
    payload:
      body: '/bin/ls -l'


- name: Executing Lambda function
  execute_lambda:
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    function_arn: "arn:aws:lambda:us-east-1:113505086193:function:{{ serverless_uuid }}"
    payload:
      body: '/bin/cp /etc/passwd /tmp/out'


- name: Delete Lambda function
  lambda:
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    name: "{{ serverless_uuid }}"
    state: absent
