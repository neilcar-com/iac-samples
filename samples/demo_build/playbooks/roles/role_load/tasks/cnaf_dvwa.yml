- name: Start DVWA
  docker_container:
    name: dvwa
    image: infoslack/dvwa
    ports:
      - "8050:80"
    timeout: 600
  delegate_to: "{{ groups['console'][0] }}"
# Started on port that isn't accessible from outside world

- name: Create /opt/code
  file: path=/opt/code state=directory

- name: Copy dvwa.py
  copy:
    src: dvwa.py
    dest: /opt/code/dvwa.py
    mode: 0744

- name: Copy exploit.sh
  copy:
    src: struts2_demo/struts.client/exploit.sh
    dest: /opt/code/exploit.sh
    mode: 0744

- name: Start Selenium
  docker_container:
    name: selenium
    image: selenium/standalone-chrome-debug
    state: started

- name: Get dvwa hash
  docker_image_facts:
    name: infoslack/dvwa
  register: dvwa
  delegate_to: "{{ groups['console'][0] }}"

- name: dump dvwa
  debug: var=dvwa
- delegate_to: "{{ groups['console'][0] }}"
  name: Gather facts from console
  setup:
  tags: always

- delegate_to: "{{ groups['console'][0] }}"
  debug: var=ansible_default_ipv4
  register: console_ip
  tags: always

- delegate_to: "{{ groups['console'][0] }}"
  debug: var=ansible_hostname
  register: console_hostname
  tags: always
- name: Set non-k8s target addr
  set_fact: target_addr="{{ console_ip.ansible_default_ipv4.address }}"
  when: not twistlock_console_k8s
  tags: always

- name: Set k8s target addr
  set_fact: target_addr="{{ console_ip.ansible_default_ipv4.address }}"
  when: twistlock_console_k8s
  tags: always

- name: Stop learning for dvwa
  uri:
    url: "{{ twistlock_console }}/api/v1/profiles/container/{{ dvwa.images[0].Id }}_/learn"
    method: POST
    user: "{{ console_user }}"
    password: "{{ console_password }}"
    body: "{'imageID':'{{ dvwa.images[0].Id }}', 'state':'manualActive'}"
    force_basic_auth: yes
    body_format: json
    validate_certs: no
    status_code: 200


- name: Execute dvwa.py
  command: "python /opt/code/dvwa.py"
  environment:
    test_url: "http://{{ target_addr }}:8050/"
  retries: 5
  delay: 10
  register: result
  until: result.rc == 0
