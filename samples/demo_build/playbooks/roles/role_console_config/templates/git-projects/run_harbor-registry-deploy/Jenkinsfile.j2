node {

    stage('Clone Repository') {
        /* Let's make sure we have the repository cloned to our workspace */
        checkout scm
    }

    stage('Clean') {
            sh "helm delete --purge --debug harbor || true"
            sh "kubectl delete namespace harbor --ignore-not-found=true"
    }

    stage('Install Helm') {
            sh "curl -LO https://git.io/get_helm.sh"
            sh "chmod 700 get_helm.sh"
            sh "./get_helm.sh"
            sh "helm init --service-account tiller"
    }

    stage('Add Harbor Helm Repository') {
            sh "helm repo add harbor https://helm.goharbor.io"
    }

    stage('Create Harbor Namespace') {
            sh "kubectl create namespace harbor"
    }

    stage('Create harbor-tls Secret in Harbor Namespace') {
            sh "kubectl get secret console-cert -n ingress-nginx -o yaml | grep tls.crt | cut -f2 -d \':\'|awk \'{\0441=\0441};1\'|base64 --decode|awk \'split_after==1{n++;split_after=0} /-----END CERTIFICATE-----/ {split_after=1} {print > \"tls\" n \".crt\"}\' && mv tls1.crt ca.crt"
            sh "kubectl get secret console-cert -n ingress-nginx -o yaml | grep tls.key | cut -f2 -d \':\'|cut -d \' \' -f 2|base64 --decode > tls.key"
            sh "kubectl create secret generic harbor-tls --from-file=tls.crt=./tls.crt --from-file=tls.key=./tls.key --from-file=ca.crt=./ca.crt -n harbor"
    }

    stage('Install Harbor using Helm') {
            sh "helm install --name harbor --namespace harbor harbor/harbor --set expose.ingress.hosts.core='harbor-{{ groups['k8s-master'][0] }}' --set expose.ingress.hosts.notary='notary-{{ groups['k8s-master'][0] }}' --set expose.tls.secretName=harbor-tls --set externalURL='https://harbor-{{ groups['k8s-master'][0] }}'"
    }

    stage('Add Harbor Registry in Twistlock Console') {
        withCredentials([usernamePassword(credentialsId: 'twistlock_creds', passwordVariable: 'TL_PASS', usernameVariable: 'TL_USER')]) {
                sh 'curl -s -k -u $TL_USER:$TL_PASS https://$TL_CONSOLE/api/v1/credentials -X POST -H "Content-Type:application/json" --data-binary "@harbor_creds_rule.json"'
                sh 'curl -s -k -u $TL_USER:$TL_PASS https://$TL_CONSOLE/api/v1/settings/registry -X POST -H "Content-Type:application/json" --data-binary "@harbor_reg_rule.json"'
        }
    }
}
