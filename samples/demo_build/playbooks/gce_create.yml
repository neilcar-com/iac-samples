- name: Get host name
  set_fact: target_host={{ ansible_host }}
  
- set_fact: dns_zone="lab.twistlock.com"
  when: dns_zone is not defined

- set_fact: dns_project_id="cto-sandbox"
  when: dns_project_id is not defined

- name: Gather local OS
  setup:
  delegate_to: localhost

- name: Create static IP for {{ target_host }}
  gce_eip:
    service_account_email: "{{ service_account_email }}"
    credentials_file: "{{ credentials_file }}"
    project_id: "{{ project_id | default( lookup('build_defaults','project_id') )  }}"
    name: "{{ lookup('shorthostname', target_host) }}"
    region: "{{ region | default( lookup('build_defaults','region') )  }}"
    state: present
  register: eip
  delegate_to: localhost

- debug: var=eip.address

- name: Create DNS entry for {{ target_host }}
  gcdns_record:
    service_account_email: "{{ service_account_email }}"
    credentials_file: "{{ credentials_file }}"
    project_id: "{{ dns_project_id | default( lookup('build_defaults','dns_project_id') )  }}"
    # All DNS zones live in cto-sandbox
    record: "{{ target_host }}"
    zone: "{{ dns_zone | default( lookup('build_defaults','dns_zone') )  }}"
    type: A
    value: "{{ eip.address }}"
    overwrite: true
    ttl: 60
  delegate_to: localhost

- set_fact: temp=""

- name: Get the default SSH key
  command: cat {{ ansible_ssh_private_key_file }}.pub
  register: ssh_key
  delegate_to: localhost


- name: Generate the SSH key JSON
  set_fact: temp='{"sshKeys":"{{ target_user }}:{{ ssh_key.stdout }}"}'
  delegate_to: localhost


- name: Launch instance {{ target_host }}
  gce:
    instance_names: "{{ lookup('shorthostname', target_host) }}" 
    external_ip: "{{ lookup('shorthostname', target_host) }}"
    machine_type: "{{ machine_type }}"
    image: "{{ image | default( lookup('build_defaults','image') )  }}"
    service_account_email: "{{ service_account_email }}"
    credentials_file: "{{ credentials_file }}"
    persistent_boot_disk: true
    project_id: "{{ project_id | default( lookup('build_defaults','project_id') )  }}"
    disk_size: "{{ disksize }}"
    zone: "{{ zone | default( lookup('build_defaults','zone') )  }}"
    metadata: '{{ temp }}' 
    state: active
    service_account_permissions:
        - storage-full
        - cloud-platform      
  delegate_to: localhost

- name: Label our instance
  gce_labels:
    resource_name: "{{ lookup('shorthostname', target_host) }}" 
    service_account_email: "{{ service_account_email }}"
    credentials_file: "{{ credentials_file }}"
    project_id: "{{ project_id | default( lookup('build_defaults','project_id') )  }}"
    resource_location: "{{ zone | default( lookup('build_defaults','zone') )  }}"
    resource_type: instances
    labels:
      owner: "{{ target_user }}"
      demo_group: "{{ group_names[0] }}"
      demo_build_tag: "{{ lookup('env', 'DEMO_BUILD_TAG') }}"
      prerelease: "{{ twistlock_install_prerelease | default( lookup('build_defaults','twistlock_install_prerelease') )}}"
    state: present
  delegate_to: localhost  
 
# - name: Clear DNS cache on MacOS
#   shell: 'sudo killall -HUP mDNSResponder'
#   become: true
#   delegate_to: localhost
#   ignore_errors: yes
#   when: ansible_distribution == 'MacOSX'

- name: Wait for SSH for instance {{ target_host }}
  wait_for:
    delay: 1
    host: "{{ target_host }}"
    port: 22
    state: started
    timeout: 600
  delegate_to: localhost
